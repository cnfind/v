
<fieldset class="cbi-section">
	<table width="100%">
	  <tr><td width="100%" colspan="4">
	    <p align="center" id="update_tip">
	  		<b><%:Note: if the update fails, you can manually download and upload%></b>
	  	</p>
	  </td></tr>
	  <tr><td width="25%"><%:Compiled Version Selected (Auto-save when you click to update or download)%></td>
	  	<td width="25%" align="left"><select id="CORE_VERSION">
	  		<option value="linux-386"><%:linux-386%></option>
				<option value="linux-amd64"><%:linux-amd64(x86-64)%></option>
				<option value="linux-amd64-v3"><%:linux-amd64-v3(x86-64)%></option>
				<option value="linux-armv5"><%:linux-armv5%></option>
				<option value="linux-armv6"><%:linux-armv6%></option>
				<option value="linux-armv7"><%:linux-armv7%></option>
				<option value="linux-arm64"><%:linux-arm64(armv8)%></option>
				<option value="linux-loong64-abi1"><%:linux-loong64-abi1%></option>
				<option value="linux-loong64-abi2"><%:linux-loong64-abi2%></option>
				<option value="linux-riscv64"><%:linux-riscv64%></option>
				<option value="linux-s390x"><%:linux-s390x%></option>
				<option value="linux-mips-hardfloat"><%:linux-mips-hardfloat%></option>
				<option value="linux-mips-softfloat"><%:linux-mips-softfloat%></option>
				<option value="linux-mips64"><%:linux-mips64%></option>
				<option value="linux-mips64le"><%:linux-mips64le%></option>
				<option value="linux-mipsle-softfloat"><%:linux-mipsle-softfloat%></option>
				<option value="linux-mipsle-hardfloat"><%:linux-mipsle-hardfloat%></option>
				<option value="0"><%:Not Set%></option>
	  	</select></td>
	  	<td width="25%"><%:Release Branch Selected (Auto-save when you click to update or download)%></td>
	  	<td width="25%" align="left"><select id="RELEASE_BRANCH">
	  		<option value="master">Master</option>
				<option value="dev">Developer</option>
	  	</select></td>
	  	</tr>
		<tr>
			<td width="25%"><%:CPU Architecture%></td><td width="25%" align="left" id="CPU_MODEL"><%:Collecting data...%></td>
			<td width="25%"><%:Last Check Update%></td><td width="25%" align="left" id="CHECKTIME"><%:Collecting data...%></td>
		</tr>
	  <tr><td width="100%" colspan="4">
	    <p align="center">
	  		<b><%:Core path:%>/etc/openclash/core/clash_meta</b>
	  	</p>
	  </td></tr>
		<tr><td width="25%">[Meta] <%:Current Core%></td><td width="25%" align="left" id="CORE_META_CV"><%:Collecting data...%></td><td width="25%">[Meta] <%:Latest Core%></td><td width="25%" align="left" id="CORE_META_LV"><%:Collecting data...%></td></tr>
		<tr><td width="25%"><%:Update Core%></td><td width="25%" align="left" id="core_meta_up"><%:Collecting data...%></td><td width="25%"><%:Download Latest Core%></td><td width="25%" align="left" id="ma_core_meta_up"><%:Collecting data...%></td></tr>
	</table>
</fieldset>
<fieldset class="cbi-section">
	<table width="100%">
		<tr><td width="100%" colspan="4">
	    <p align="center">
	  		<b><%:Client Update%></b>
	  	</p>
	  </td></tr>
		<tr><td width="25%"><%:Current Client%></td><td width="25%" align="left" id="OP_CV"><%:Collecting data...%></td><td width="25%"><%:Latest Client%></td><td width="25%" align="left" id="OP_LV"><%:Collecting data...%></td></tr>
	  <tr><td width="25%"><%:Update Client%></td><td width="25%" align="left" id="op_up"><%:Collecting data...%></td><td width="25%"><%:Download Latest Client%></td><td width="25%" align="left" id="ma_op_up"><%:Collecting data...%></td></tr>
	</table>
</fieldset>

<script type="text/javascript">//<![CDATA[
	var core_version = document.getElementById('CORE_VERSION');
 	var checktime = document.getElementById('CHECKTIME');
	var cpu_model = document.getElementById('CPU_MODEL');
	var core_meta_cv = document.getElementById('CORE_META_CV');
	var core_meta_lv = document.getElementById('CORE_META_LV');
	var op_cv = document.getElementById('OP_CV');
	var op_lv = document.getElementById('OP_LV');
	var core_meta_up = document.getElementById('core_meta_up');
	var op_up = document.getElementById('op_up');
	var update_tip = document.getElementById('update_tip');
	var ma_core_meta_up = document.getElementById('ma_core_meta_up');
	var ma_op_up = document.getElementById('ma_op_up');
	var release_branch = document.getElementById('RELEASE_BRANCH');
	core_meta_up.innerHTML = '<input type="button" class="btn cbi-button cbi-button-reload" value="<%:Check And Update%>" onclick="return core_update(this,\'Meta\')"/>';
	op_up.innerHTML = '<input type="button" class="btn cbi-button cbi-button-reload" value="<%:Check And Update%>" onclick="return op_update(this)"/>';
	ma_core_meta_up.innerHTML = '<input type="button" class="btn cbi-button cbi-button-reload" value="<%:Download%>" onclick="return ma_core_update(this,\'Meta\')"/>';
	ma_op_up.innerHTML = '<input type="button" class="btn cbi-button cbi-button-reload" value="<%:Download%>" onclick="return ma_op_update(this)"/>';

	XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "update_info")%>', null, function(x, status) {
		if ( x && x.status == 200 ) {
			if ( status.corever != "0" && status.corever != "" ) {
		  		core_version.value = status.corever;
			}
			else {
		  		core_version.value = "0";
			}
			if ( status.release_branch != "" ) {
		  		release_branch.value = status.release_branch;
			}
			else {
		  		release_branch.value = "master";
			}
		}
		else {
			core_version.value = "0";
			release_branch.value = "master";
		}
	});
	
	XHR.poll(3, '<%=luci.dispatcher.build_url("admin", "services", "openclash", "update")%>', null, function(x, status) {
		if ( x && x.status == 200 ) {
			cpu_model.innerHTML = status.coremodel ? "<b style=color:green>"+status.coremodel+"</b>" : "<b style=color:red><%:Model Not Found%></b>";
			if ( status.upchecktime != "1" ) {
				checktime.innerHTML = "<b style=color:green>"+status.upchecktime+"</b>";
			}
			else {
				checktime.innerHTML = "<b style=color:red><%:Check Failed%></b>";
			}
			if ( status.coremetacv == "0" ) {
				core_meta_cv.innerHTML = "<b style=color:red><%:File Not Exist%></b>";
			}
			else if (status.coremetacv != "") {
				core_meta_cv.innerHTML = "<b style=color:green>"+status.coremetacv+"</b>";
			}
			else {
				core_meta_cv.innerHTML = "<b style=color:red><%:Unknown%></b>";
			}
			var coremetalvis = status.corelv;
			if (coremetalvis != status.coremetacv && coremetalvis != "" && coremetalvis != "\n") {
			   core_meta_lv.innerHTML = "<b style=color:green>"+coremetalvis+"<%:<New>%></b>";
			}
			else if (coremetalvis != "" && coremetalvis == status.coremetacv && coremetalvis != "\n") {
			   core_meta_lv.innerHTML = "<b style=color:green>"+coremetalvis+"</b>";
			}
			else {
			   core_meta_lv.innerHTML = "<b style=color:green>"+status.coremetacv+"</b>";
			}
			var oplv = status.oplv;
			var arr_op = oplv.split(",");
			var oplvis = arr_op[0];
			var new_op = arr_op[1];
			op_cv.innerHTML = status.opcv ? "<b style=color:green>"+status.opcv+"</b>" : "<b style=color:red><%:Unknown%></b>";
			if ( new_op == "2" && oplvis != "" && oplvis != "\n") {
			   op_lv.innerHTML = "<b style=color:green>"+oplvis+"<%:<New>%></b>";
			}
			else if (oplvis != "" && oplvis != "\n") {
			   op_lv.innerHTML = "<b style=color:green>"+oplvis+"</b>";
			}
			else {
			   op_lv.innerHTML = "<b style=color:green>"+status.opcv+"</b>";
			}
		}
	});

	XHR.poll(7, '<%=luci.dispatcher.build_url("admin", "services", "openclash", "startlog")%>', status.startlog, function(x, status) {
		if ( x && x.status == 200 ) {
			if ( status.startlog == "\n" || status.startlog == "" ) {
		    	var rdmdl=Math.floor(Math.random()*2)+1;
				if(rdmdl==1)
				{
					update_tip.innerHTML = '<b><font><%:Note: if the update fails, you can manually download and upload%></font></b>';
				}
				if(rdmdl==2)
				{
					update_tip.innerHTML = '<b><font><%:Note: the client may not support update, because the firmware with squashfs format will not release flash space after updating%></font></b>';
				}
      		 }
   		}
	});

	XHR.poll(3, '<%=luci.dispatcher.build_url("admin", "services", "openclash", "startlog")%>', null, function(x, status) {
	  if ( x && x.status == 200 ) {
		if ( status.startlog.match("level=fatal") || status.startlog.indexOf("FTL [Config]") != "-1" ) {
	    	XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "del_start_log")%>', null, function(x) {});
			if ( status.startlog.match("level=fatal") ) {
				alert('<%:OpenClash Start Failed%> :\n\n' + status.startlog.split('msg=')[1]);
			}
	    	else {
				alert('<%:OpenClash Start Failed%> :\n\n' + status.startlog.split('FTL [Config] ')[1]);
			};
		}
		else if ( status.startlog != "\n" && status.startlog != "" ) {
			if ( status.startlog.match("Tip:") || status.startlog.match("提示：")) {
				update_tip.innerHTML = '<b style=color:#ff6f00>'+status.startlog+'</b>';
			}
			else if ( status.startlog.match("Error:") || status.startlog.match("错误：")) {
				update_tip.innerHTML = '<b style=color:#FF0000>'+status.startlog+'</b>';
			}
			else if ( status.startlog.match("Warning:") || status.startlog.match("警告：")) {
	    		update_tip.innerHTML = '<b style=color:#ff00bb>'+status.startlog+'</b>';
			}
			else if ( status.startlog.match("Watchdog:") || status.startlog.match("守护程序：")) {
	    		update_tip.innerHTML = '<b style=color:#b300ff>'+status.startlog+'</b>';
			}
			else {
	    		update_tip.innerHTML = '<b style=color:green>'+status.startlog+'</b>';
			};
		};
	  };
	});
	
	function core_update(btn,type)
    {
    	var v = core_version.value;
    	var r = release_branch.value;
		XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "save_corever_branch")%>', {core_ver: v, release_branch: r}, function(x, status) {
			if (x && x.status == 200) {
				XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "coreupdate")%>', {core_type: type}, function(x, status) {
					btn.value    = '<%:Check And Update%>';
					btn.disabled = false;
					return false;
				});
			}
		});
    }

	function op_update(btn)
    {
        var r = release_branch.value;
		XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "save_corever_branch")%>', {release_branch: r}, function(x, status) {
			if (x && x.status == 200) {
				XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "opupdate")%>', null, function(x, status) {
					btn.value    = '<%:Check And Update%>';
					btn.disabled = false;
					return false;
				});
			}
		});
    }
    
    function ma_core_update(btn,type)
    {
    	var v = core_version.value;
		var r = release_branch.value;
		XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "save_corever_branch")%>', {core_ver: v, release_branch: r}, function(x, status) {
		if (x && x.status == 200) {
			btn.value    = '<%:Download%>';
			btn.disabled = false;
			XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "update_ma")%>', status.corever, function(x, status) {
			if ( x && x.status == 200 ) {
				if ( status.corever != "0" ) {
					if (type == "Meta") {
						url4='https://raw.githubusercontent.com/vernesong/OpenClash/core/'+r+'/meta/clash-'+status.corever+'.tar.gz';
						window.location.href=url4;
					}
				}
				else {
					alert('<%:No Compiled Version is Selected, Please Select on The Top and Try Again!%>')
				}
			}
       		});
        return false;
    	}
      });
    }
    
    function ma_op_update(btn)
    {
        btn.value    = '<%:Download%>';
        btn.disabled = false;
        var r = release_branch.value;
		XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "save_corever_branch")%>', {release_branch: r}, function(x, status) {
			if (x && x.status == 200) {
			XHR.get('<%=luci.dispatcher.build_url("admin", "services", "openclash", "update_ma")%>', status.oplv, function(x, status) {
				if ( x && x.status == 200 ) {
					var oplv = status.oplv;
					var oplvis = oplv.substring(oplv.indexOf("v") + 1,oplv.indexOf(","));
					if ( oplvis != "" ) {
						if (status.pkg_type == "apk") {
							url2='https://raw.githubusercontent.com/vernesong/OpenClash/package/'+r+'/luci-app-openclash-'+oplvis+'.apk';
						}
						else {
							url2='https://raw.githubusercontent.com/vernesong/OpenClash/package/'+r+'/luci-app-openclash_'+oplvis+'_all.ipk';
						}
						window.location.href=url2;
					}
					else {
						alert('<%:Failed to get the latest version. Please try again later!%>')
					}
				}
			});
			}
        });
        return false; 
    }

//]]></script>
